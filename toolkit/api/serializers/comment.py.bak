#-*- coding: utf-8 -*-
from rest_framework import serializers
		from		threadedcomments.models import ThreadedComment

		from.		user	import SimpleUserSerializer


		class 
MatterCommentSerializer(serializers.HyperlinkedModelSerializer):
thread = serializers.SerializerMethodField('get_thread')
date_created = serializers.DateTimeField(source = 'submit_date', read_only = True)
date_modified = serializers.SerializerMethodField('get_date_modified')
user = SimpleUserSerializer(required = False)
	class		Meta:
			fields = ('id',
		    'title',
		    'comment',
		    'date_created',
		    'date_modified',
		    'thread',
		    'user')
lookup_field = 'id'
model = ThreadedComment

def 
get_thread(self, obj):
return MatterCommentSerializer(obj.children.all(), context = self.context, many = True).data

def get_date_modified(self, obj):
"" "
If we are looking at the head of the thread, then get the last childs submit_date
and make it the last modified @ TODO cache this info
"" "
if obj.parent is None:
last_item = obj.last_child
return last_item.submit_date
